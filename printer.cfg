[include mainsail.cfg]
[include toolhead_btt_ebbcan_G0B1_v1.2.cfg]

[include mmu/base/*.cfg]
# [include mmu/optional/client_macros.cfg]
# [include mmu/optional/mmu_ercf_compat.cfg]


[pause_resume]
recover_velocity: 300.0

# [mcu rpi]
# serial: /tmp/klipper_host_mcu

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True  ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 20.0  ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 1.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 5.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 1.0   ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 1.0   ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
gcode:

[gcode_macro START_PRINT]
gcode:
    {% set REFERENCED_TOOLS = params.REFERENCED_TOOLS|default("")|string %}
    {% set INITIAL_TOOL = params.INITIAL_TOOL|default(0)|int %}
    {% if REFERENCED_TOOLS == "!referenced_tools!" %}
        RESPOND MSG="Happy Hare gcode pre-processor is disabled"
        {% set REFERENCED_TOOLS = INITIAL_TOOL %}
    {% elif REFERENCED_TOOLS == "" %}
        RESPOND MSG="Happy Hare single color print"
        {% set REFERENCED_TOOLS = INITIAL_TOOL %}
    {% endif %}

    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    # SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    
    BED_MESH_PROFILE LOAD="default"
    
    SET_FILAMENT_SENSOR SENSOR=toolhead_sensor ENABLE=1
    MMU_CHECK_GATE TOOLS={REFERENCED_TOOLS}
    MMU_CHANGE_TOOL STANDALONE=1 TOOL={INITIAL_TOOL}

[gcode_macro END_PRINT]
gcode:
    {% set EJECT_FILAMENT = params.EJECT_FILAMENT|default(0)|int %}
    {% if EJECT_FILAMENT|int == 1 %}
      MMU_EJECT
    {% endif %}
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    # G91
    # G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    # G1 Z10 F3000
    # G90
    # Disable steppers
    M84


[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[bltouch]
sensor_pin: ^can0:PB8
control_pin: can0:PB9
speed: 7
sample_retract_dist: 10
pin_move_time: 0.5
stow_on_each_sample: false
probe_with_touch_mode: false
pin_up_reports_not_triggered: True
pin_up_touch_mode_reports_triggered: True
z_offset: 1.35
x_offset: 0
y_offset: 10

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_320026001347313337303439-if00

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000
max_z_velocity: 25
max_z_accel: 30

[stepper_x]
step_pin: PE9
endstop_pin: ^!can0:PB6
dir_pin: PF1
enable_pin: !PF2
rotation_distance: 40
microsteps: 16
position_endstop: 0
position_min: -5
position_max: 400 # for bed mesh
homing_speed: 50
second_homing_speed: 10
homing_retract_dist: 10

[tmc2209 stepper_x]
uart_pin: PC13
run_current: 1.8
hold_current: 0.500

[stepper_y]
step_pin: PE11
endstop_pin: !PE12
dir_pin: PE8
enable_pin: !PD7
rotation_distance: 40
microsteps: 16
position_endstop: -5
position_min: -20
position_max: 390 # for bed mesh
homing_speed: 50
second_homing_speed: 10
homing_retract_dist: 10

[tmc2209 stepper_y]
uart_pin: PE3
run_current: 1.8
hold_current: 0.500


[stepper_z]
endstop_pin: probe:z_virtual_endstop
step_pin: PE13
dir_pin: PC2
enable_pin: !PC0
rotation_distance: 8
microsteps: 16
position_min: -5 # Needed for z-offset calibration and tilt_adjust.
homing_speed: 5
second_homing_speed: 2
position_max: 400
homing_retract_dist: 10

[tmc2209 stepper_z]
uart_pin: PE1
run_current: 0.650
hold_current: 0.450

[heater_bed]
heater_pin: PD12
sensor_pin: PF3
sensor_type: EPCOS 100K B57560G104F
min_temp: 0
max_temp: 130
control = pid
pid_kp = 72.353
pid_ki = 1.227
pid_kd = 1066.301

#[filament_switch_sensor filament_sensor]
#pause_on_runout: True
#runout_gcode: M25
#switch_pin: !PE6

#[output_pin beeper]
#pin: PA8

[safe_z_home]
home_xy_position: 200, 200
speed: 50
z_hop: 10
z_hop_speed: 5

[bed_screws]
screw1: 25,  25
screw2: 200, 25
screw3: 375, 25
screw4: 25,  375
screw5: 200, 375
screw6: 375, 375

[screws_tilt_adjust]
screw1: 25,  30
screw1_name: front left
screw2: 200, 30
screw2_name: front center
screw3: 375, 30
screw3_name: front right
screw4: 25,  370
screw4_name: rear left
screw5: 200, 370
screw5_name: rear center
screw6: 375, 370
screw6_name: rear right
horizontal_move_z: 10
speed: 50
screw_thread: CW-M3

[bed_mesh]
speed: 150
probe_count: 4,4
horizontal_move_z: 10
zero_reference_position: 200, 200
algorithm: lagrange
mesh_min : 35, 35
mesh_max : 370,370
mesh_pps: 0
fade_start: 1
fade_end: 10
fade_target: 0

[input_shaper]
shaper_freq_x: 56.8  # frequency for the X mark of the test model
shaper_type_x: mzv
shaper_freq_y: 36.8  # frequency for the Y mark of the test model
shaper_type_y: zv

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 1.500
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.121381, -0.113881, -0.038881, 0.056119
#*# 	  -0.178881, -0.056381, 0.086119, 0.201119
#*# 	  -0.238881, -0.096381, 0.078619, 0.198619
#*# 	  -0.383881, -0.283881, -0.193881, -0.063881
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 35.0
#*# max_x = 369.98
#*# min_y = 35.0
#*# max_y = 369.98
